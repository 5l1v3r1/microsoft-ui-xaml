namespace MU_PRIVATE_CONTROLS_NAMESPACE
{

[WUXC_VERSION_INTERNAL]
[webhosthidden]
enum ScrollingPresenterViewChangeResult
{
    Completed = 0,
    Interrupted = 1,
    Ignored = 2,
};

[WUXC_VERSION_INTERNAL]
[webhosthidden]
runtimeclass ScrollingPresenterTestHooksAnchorEvaluatedEventArgs
{
    Double ViewportAnchorPointHorizontalOffset { get; };
    Double ViewportAnchorPointVerticalOffset { get; };
    Windows.UI.Xaml.UIElement AnchorElement { get; };
}

[WUXC_VERSION_INTERNAL]
[webhosthidden]
runtimeclass ScrollingPresenterTestHooksInteractionSourcesChangedEventArgs
{
    Windows.UI.Composition.Interactions.CompositionInteractionSourceCollection InteractionSources { get; };
}

[WUXC_VERSION_INTERNAL]
[webhosthidden]
runtimeclass ScrollingPresenterTestHooksExpressionAnimationStatusChangedEventArgs
{
    Boolean IsExpressionAnimationStarted { get; };
    String PropertyName{ get; };
}

[WUXC_VERSION_INTERNAL]
[default_interface]
[webhosthidden]
runtimeclass ScrollingPresenterTestHooks
{
    static Boolean AreAnchorNotificationsRaised { get; set; };
    static Boolean AreInteractionSourcesNotificationsRaised { get; set; };
    static Boolean AreExpressionAnimationStatusNotificationsRaised { get; set; };
    static Boolean IsInteractionTrackerPointerWheelRedirectionEnabled { get; set; };
    static Windows.Foundation.IReference<Boolean> IsAnimationsEnabledOverride { get; set; };
    static Int32 MouseWheelDeltaForVelocityUnit { get; set; };
    static Int32 MouseWheelScrollLines{ get; set; };
    static Int32 MouseWheelScrollChars{ get; set; };
    static Single MouseWheelInertiaDecayRate { get; set; };
    static void GetOffsetsChangeVelocityParameters(out Int32 millisecondsPerUnit, out Int32 minMilliseconds, out Int32 maxMilliseconds);
    static void SetOffsetsChangeVelocityParameters(Int32 millisecondsPerUnit, Int32 minMilliseconds, Int32 maxMilliseconds);
    static void GetZoomFactorChangeVelocityParameters(out Int32 millisecondsPerUnit, out Int32 minMilliseconds, out Int32 maxMilliseconds);
    static void SetZoomFactorChangeVelocityParameters(Int32 millisecondsPerUnit, Int32 minMilliseconds, Int32 maxMilliseconds);
    static void GetContentLayoutOffsetX(MU_XCP_NAMESPACE.ScrollingPresenter scrollingPresenter, out Single contentLayoutOffsetX);
    static void SetContentLayoutOffsetX(MU_XCP_NAMESPACE.ScrollingPresenter scrollingPresenter, Single contentLayoutOffsetX);
    static void GetContentLayoutOffsetY(MU_XCP_NAMESPACE.ScrollingPresenter scrollingPresenter, out Single contentLayoutOffsetY);
    static void SetContentLayoutOffsetY(MU_XCP_NAMESPACE.ScrollingPresenter scrollingPresenter, Single contentLayoutOffsetY);
    static Windows.Foundation.Numerics.Vector2 GetArrangeRenderSizesDelta(MU_XCP_NAMESPACE.ScrollingPresenter scrollingPresenter);
    static Windows.Foundation.Numerics.Vector2 GetMinPosition(MU_XCP_NAMESPACE.ScrollingPresenter scrollingPresenter);
    static Windows.Foundation.Numerics.Vector2 GetMaxPosition(MU_XCP_NAMESPACE.ScrollingPresenter scrollingPresenter);
    static Windows.UI.Composition.Interactions.InteractionTracker GetInteractionTracker(MU_XCP_NAMESPACE.ScrollingPresenter scrollingPresenter);
    static ScrollingPresenterViewChangeResult GetScrollCompletedResult(MU_XC_NAMESPACE.ScrollingScrollCompletedEventArgs scrollCompletedEventArgs);
    static ScrollingPresenterViewChangeResult GetZoomCompletedResult(MU_XC_NAMESPACE.ScrollingZoomCompletedEventArgs zoomCompletedEventArgs);
    static Windows.Foundation.Collections.IVector<MU_XCP_NAMESPACE.ScrollSnapPointBase> GetConsolidatedHorizontalScrollSnapPoints(MU_XCP_NAMESPACE.ScrollingPresenter scrollingPresenter);
    static Windows.Foundation.Collections.IVector<MU_XCP_NAMESPACE.ScrollSnapPointBase> GetConsolidatedVerticalScrollSnapPoints(MU_XCP_NAMESPACE.ScrollingPresenter scrollingPresenter);
    static Windows.Foundation.Collections.IVector<MU_XCP_NAMESPACE.ZoomSnapPointBase> GetConsolidatedZoomSnapPoints(MU_XCP_NAMESPACE.ScrollingPresenter scrollingPresenter);
    static Windows.Foundation.Numerics.Vector2 GetHorizontalSnapPointActualApplicableZone(MU_XCP_NAMESPACE.ScrollingPresenter scrollingPresenter, MU_XCP_NAMESPACE.ScrollSnapPointBase scrollSnapPoint);
    static Windows.Foundation.Numerics.Vector2 GetVerticalSnapPointActualApplicableZone(MU_XCP_NAMESPACE.ScrollingPresenter scrollingPresenter, MU_XCP_NAMESPACE.ScrollSnapPointBase scrollSnapPoint);
    static Windows.Foundation.Numerics.Vector2 GetZoomSnapPointActualApplicableZone(MU_XCP_NAMESPACE.ScrollingPresenter scrollingPresenter, MU_XCP_NAMESPACE.ZoomSnapPointBase zoomSnapPoint);
    static Int32 GetHorizontalSnapPointCombinationCount(MU_XCP_NAMESPACE.ScrollingPresenter scrollingPresenter, MU_XCP_NAMESPACE.ScrollSnapPointBase scrollSnapPoint);
    static Int32 GetVerticalSnapPointCombinationCount(MU_XCP_NAMESPACE.ScrollingPresenter scrollingPresenter, MU_XCP_NAMESPACE.ScrollSnapPointBase scrollSnapPoint);
    static Int32 GetZoomSnapPointCombinationCount(MU_XCP_NAMESPACE.ScrollingPresenter scrollingPresenter, MU_XCP_NAMESPACE.ZoomSnapPointBase zoomSnapPoint);
    static Windows.UI.Color GetSnapPointVisualizationColor(MU_XCP_NAMESPACE.SnapPointBase snapPoint);
    static void SetSnapPointVisualizationColor(MU_XCP_NAMESPACE.SnapPointBase snapPoint, Windows.UI.Color color);
    static event Windows.Foundation.TypedEventHandler<MU_XCP_NAMESPACE.ScrollingPresenter, ScrollingPresenterTestHooksAnchorEvaluatedEventArgs> AnchorEvaluated;
    static event Windows.Foundation.TypedEventHandler<MU_XCP_NAMESPACE.ScrollingPresenter, ScrollingPresenterTestHooksInteractionSourcesChangedEventArgs> InteractionSourcesChanged;
    static event Windows.Foundation.TypedEventHandler<MU_XCP_NAMESPACE.ScrollingPresenter, ScrollingPresenterTestHooksExpressionAnimationStatusChangedEventArgs> ExpressionAnimationStatusChanged;
    static event Windows.Foundation.TypedEventHandler<MU_XCP_NAMESPACE.ScrollingPresenter, Object> ContentLayoutOffsetXChanged;
    static event Windows.Foundation.TypedEventHandler<MU_XCP_NAMESPACE.ScrollingPresenter, Object> ContentLayoutOffsetYChanged;
}

}
